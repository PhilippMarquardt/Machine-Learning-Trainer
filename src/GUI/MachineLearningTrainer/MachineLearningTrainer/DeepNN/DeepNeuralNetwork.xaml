<UserControl x:Class="MachineLearningTrainer.DeepNeuralNetwork"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MachineLearningTrainer"
             xmlns:v="clr-namespace:MachineLearningTrainer.ValueConverter"
             mc:Ignorable="d" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             Background="{DynamicResource MaterialDesignPaper}"
             d:DesignHeight="800" d:DesignWidth="800">

    <UserControl.Triggers>
        <EventTrigger RoutedEvent="Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation
                      Storyboard.TargetProperty="Opacity"
                      From="0.0" To="1.0" Duration="0:0:1"/>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </UserControl.Triggers>
    
    <UserControl.Resources>

        <Style x:Key="RadioButtonList" TargetType="{x:Type ListBox}">
            <!-- ControlTemplate taken from MSDN http://msdn.microsoft.com/en-us/library/ms754242.aspx -->
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinHeight" Value="95"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border 
                              Name="Border" 
                              Background="Transparent"
                              BorderBrush="Transparent"
                              BorderThickness="0"
                              CornerRadius="2">
                            <ScrollViewer 
                                Margin="0"
                                Focusable="false">          
                                <StackPanel Margin="2" IsItemsHost="True" />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background"
                                 Value="Transparent" />
                                <Setter TargetName="Border" Property="BorderBrush"
                                  Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ListBoxItem}" >
                        <Setter Property="Margin" Value="2" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border Name="theBorder" Background="Transparent">
                                        <RadioButton Focusable="False"
                                              IsHitTestVisible="False"   
                                            
                                              IsChecked="{TemplateBinding IsSelected}">
                                            <TextBlock Text="{Binding Content}" Width="Auto" Background="Transparent" Foreground="Black" Height="Auto" FontSize="10"/>
                                        </RadioButton>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <v:ToggleBoolean x:Key="ToggleBoolean"/>
        <v:SelectedTypeDense x:Key="SelectedTypeDense"/>
        <v:SelectedTypeDropout x:Key="SelectedTypeDropout"/>
        <BooleanToVisibilityConverter x:Key="booleanToVisibiliy" />
        <v:SelectedLayerDense x:Key="SelectedLayerDenseToBoolean"/>
        <v:SelectedLayerDropout x:Key="SelectedLayerDropoutToBoolean"/>
        <Style x:Key="BasicButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Content" Value="Hello World"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#FF2196F3" />
            <Setter Property="Margin" Value="10"/>
        </Style>

        <Style x:Key="IncreaseOpacityOnHover" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                              Storyboard.TargetProperty="Opacity"
                              From="0.3" To="1.0" Duration="0:0:0.5"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                From="1.0" To="0.3" Duration="0:0:1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        
      
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.3*"/>
            <ColumnDefinition Width="0.7*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.9*"/>
            <RowDefinition Height="0.05*"/>
        </Grid.RowDefinitions>
        <ScrollViewer  VerticalScrollBarVisibility="Auto">
            <WrapPanel Grid.Column="0" Grid.Row="0" Margin="10" Orientation="Vertical">
                <materialDesign:Card Padding="10" Margin="10">
                    <StackPanel>
                        <TextBlock Text="Welcome to the DNN designer" Width="Auto" Height="Auto" TextWrapping="Wrap" Foreground="Black" HorizontalAlignment="Center" Margin="10"/>
                        <TextBlock Text="The first two layers are the input and output layer. Feel free to add hidden layers" Width="Auto" Height="Auto" TextWrapping="Wrap" Foreground="Black" HorizontalAlignment="Center" Margin="10"/>
                        <TextBlock Text="When you've specified your architecture you can specify the hyperparameters and start the training afterwards." Width="Auto" Height="Auto" TextWrapping="Wrap" Foreground="Black" HorizontalAlignment="Center" Margin="10"/>
                        <TextBlock Text="Important note: For now only Sequential models work. Because of that, the architecture at right will be interpreted from top to bottom like the arrows indicate." Width="Auto" Height="Auto" TextWrapping="Wrap" Foreground="Black" HorizontalAlignment="Center" Margin="10"/>
                    </StackPanel>
                </materialDesign:Card>
                <materialDesign:Card Padding="10" Margin="10">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="5" HorizontalAlignment="Center">
                            <materialDesign:PackIcon Kind="AutoFix" Height="Auto" Foreground="Black"/>
                            <ToggleButton x:Name="AutoFindHyperparameters" HorizontalAlignment="Right" materialDesign:HintAssist.Hint="Auto" Margin="20,0,0,0" Height="Auto" IsChecked="{Binding AutoFindParameter}"/>
                        </StackPanel>
                        <StackPanel IsEnabled="{Binding AutoFindParameter, Converter={StaticResource ToggleBoolean}}" HorizontalAlignment="Center">
                            <TextBox materialDesign:HintAssist.Hint="Model Name" Text="{Binding ModelName}" materialDesign:HintAssist.IsFloating="True" Margin="10" Width="Auto" Foreground="Black" MaxLength="8" HorizontalContentAlignment="Center"/>
                            <TextBox materialDesign:HintAssist.Hint="Learning Rate" Text="{Binding LearningRate}" materialDesign:HintAssist.IsFloating="True" Margin="10" Width="Auto" Foreground="Black" MaxLength="10" HorizontalContentAlignment="Center"/>
                            <TextBox materialDesign:HintAssist.Hint="Epochs" Text="{Binding Epochs}" materialDesign:HintAssist.IsFloating="True" Margin="10" Width="Auto" Foreground="Black" MaxLength="4" HorizontalContentAlignment="Center"/>
                            <ComboBox Width="Auto" Foreground="Black" Margin="10" SelectedItem="{Binding Optimizer}" materialDesign:HintAssist.IsFloating="True" materialDesign:HintAssist.Hint="Optimizer" HorizontalContentAlignment="Center">
                                <ComboBoxItem Content="Adam"/>
                                <ComboBoxItem Content="RMSProp"/>
                            </ComboBox>
                            <TextBlock materialDesign:HintAssist.Hint="Learning Rate" Text="{Binding OutputPath}" materialDesign:HintAssist.IsFloating="True" Margin="10" Width="Auto" Foreground="Black" />
                            <TextBlock   Text="Select all feautures you want to use to train your model." TextWrapping="Wrap" Margin="10" Width="Auto" Foreground="Black" />
                            <ListBox ItemsSource="{Binding CSVHeaders}"  Margin="10" MaxHeight="100">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <ToggleButton Content="{Binding Content}" IsChecked="{Binding IsChecked}" Style="{x:Null}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>

                            <TextBlock Text="Select your class that you want the model to learn." TextWrapping="Wrap" Margin="10" Width="Auto" Foreground="Black" />
                            <ListBox ItemsSource="{Binding CSVTarget}"  MaxHeight="100" Margin="10">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <RadioButton Content="{Binding Content}" GroupName="Feauture" IsChecked="{Binding IsChecked}"></RadioButton>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>


                        </StackPanel>
                    </StackPanel>
                </materialDesign:Card>

                <materialDesign:Card Padding="10" Margin="10">
                    <Button Command="{Binding OpenInputDirectory}" Style="{StaticResource BasicButtonStyle}" Content="Specify input file"/>
                </materialDesign:Card>

                <materialDesign:Card Padding="10" Margin="10">
                    <Button Command="{Binding DeepNNWriteXML}" Style="{StaticResource BasicButtonStyle}" Content="Start the training"/>
                </materialDesign:Card>
            </WrapPanel>
        </ScrollViewer>
        <Grid Grid.Column="1" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.9*"/>
                <RowDefinition Height="0.1*"/>
            </Grid.RowDefinitions>
     
                <ListBox
                    x:Name="listboxHiddenLayers"
                    SelectionChanged="listboxHiddenLayers_SelectionChanged"
                    Grid.Row="0"
                    SelectedItem="{Binding SelectedDeepNeuralNetworkLayer}"
                    ItemsSource="{Binding DeepNeuralNetworkHiddenLayers}"           
                    Padding="10" >
                <ListBox.ItemContainerStyle>
                    <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="ListBoxItem">
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListBox.ItemContainerStyle>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.9*"/>
                                <ColumnDefinition Width="0.1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.9*"/>
                                <RowDefinition Height="0.1*"/>
                            </Grid.RowDefinitions>
                        
                            <materialDesign:Card
                                Height="Auto"
                                Margin="10"
                                Grid.Row="0"
                                Grid.Column="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{DynamicResource MaterialDesignBackground}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0.33*"/>
                                        <ColumnDefinition Width="0.33*"/>
                                        <ColumnDefinition Width="0.33*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0.1*"/>
                                        <RowDefinition Height="0.9*"/>
                                    </Grid.RowDefinitions>
                                    
                                    
                                    <Border BorderThickness="1" BorderBrush="#FF2196F3" Grid.Row="0" Grid.ColumnSpan="4">
                                        <TextBlock Foreground="Black" HorizontalAlignment="Center"  FontSize="23" Text="{Binding Path=Type}"/>
                                    </Border>




                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="1" Visibility="{Binding Type, Converter={StaticResource SelectedTypeDense}}">
                                        <Label Content="Number of Nodes: " FontSize="23" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        <TextBlock HorizontalAlignment="Center" Text="{Binding Path=NumberOfNodes }" Foreground="Black" FontSize="23" VerticalAlignment="Center"/>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="1" Visibility="{Binding Path=IsFirstLayer, Converter={StaticResource booleanToVisibiliy}}">
                                        <Label Content="Input dimension: " FontSize="23" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        <TextBlock  HorizontalAlignment="Center" Text="{Binding Path=Dimension}" Foreground="Black" FontSize="23" VerticalAlignment="Center"/>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="1" Visibility="{Binding Path=Type, Converter={StaticResource SelectedTypeDropout}}">
                                        <Label Content="Dropout value: " FontSize="23" Visibility="{Binding Type, Converter={StaticResource SelectedTypeDropout}}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        <TextBlock  HorizontalAlignment="Center" Text="{Binding Path=DropoutValue }" Foreground="Black" FontSize="23" VerticalAlignment="Center"/>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="1" Visibility="{Binding Type, Converter={StaticResource SelectedTypeDense}}">
                                        <Label Content="Activation Function: " FontSize="23" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        <TextBlock  HorizontalAlignment="Center" Text="{Binding Path=ActivationFunction }" Foreground="Black" FontSize="23" VerticalAlignment="Center"/>
                                    </StackPanel>
                                    
                                                                       
                                </Grid>
                            </materialDesign:Card>
                            <materialDesign:PackIcon VerticalAlignment="Bottom" HorizontalAlignment="Center" Foreground="Black"  Kind="ArrowDownBold"  Grid.Row="1"/>
                            
                            
                            <Button x:Name="btnDeleteHiddenLayer" Click="btnDeleteHiddenLayer_Click" Style="{StaticResource BasicButtonStyle}" Grid.Column="1"  Grid.Row="0">
                                <materialDesign:PackIcon Kind="Delete"/>
                            </Button>
                            
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
           
            <Button Style="{StaticResource BasicButtonStyle}"  Grid.Row="1" Height="Auto" Width="Auto" Content="Add new layer" Margin="10" Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}" CommandTarget="{Binding ElementName=AddNewLayerDialogHost}"/>
        </Grid>
        <Button  Background="Transparent" Command="{Binding PreviousPage}" Foreground="#FF2196F3" Height="Auto" HorizontalAlignment="Left" Grid.Row="3" Style="{StaticResource IncreaseOpacityOnHover}" Opacity="0.3">
            <materialDesign:PackIcon Kind="SkipPreviousCircleOutline" />
        </Button>


<!--EDIT DENSE LAYER-->
        <materialDesign:DialogHost
            x:Name="EditHiddenLayer"
            Grid.RowSpan="2"
            Grid.ColumnSpan="2"
            Padding="10"
            >
            <!--IsOpen="{Binding SelectedDeepNeuralNetworkLayer, Converter={StaticResource SelectedLayerDenseToBoolean}}"-->
            <materialDesign:DialogHost.DialogContent>
                <StackPanel Orientation="Vertical" Margin="20">
                    <TextBox Text="{Binding Path=NewLayerNumberOfNodes}" materialDesign:HintAssist.Hint="Number of nodes" Margin="5"/>
                    <ComboBox SelectedItem="{Binding NewLayerSelectedActivationFunction}" Margin="5" >
                        <ComboBoxItem Content="ReLu"/>
                        <ComboBoxItem Content="Sigmoid"/>
                        <ComboBoxItem Content="Softmax"/>
                    </ComboBox>
                    <TextBox Text="{Binding Path=NewLayerDimension}" materialDesign:HintAssist.Hint="Dimension in format rows,colums,channel" Margin="5"/>
                    <Button x:Name="btnSaveChanges" Content="Save changes" Style="{StaticResource BasicButtonStyle}"  Command="{Binding SaveChangesHiddenLayer}" Margin="5"/>
                    <Button
                        Width="Auto"
                        Height="Auto"
                        Style="{StaticResource BasicButtonStyle}"                       
                        BorderThickness="0"
                         Content="Close"
                        Margin="5"
                        Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                         />
                        <!--Command="{Binding ClosePopupCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                         AncestorType={x:Type materialDesign:DialogHost}}}"-->
                       
                </StackPanel>
            </materialDesign:DialogHost.DialogContent>
        </materialDesign:DialogHost>
        <!--EDIT DROPOUT LAYER-->
        <materialDesign:DialogHost
            x:Name="EditDropoutLayer"
            Grid.RowSpan="2"   
            Grid.ColumnSpan="2"
            Padding="10"
            >
            <!--IsOpen="{Binding SelectedDeepNeuralNetworkLayer, Converter={StaticResource SelectedLayerDropoutToBoolean}}"-->
            <materialDesign:DialogHost.DialogContent>
                <StackPanel Orientation="Vertical" Margin="20">
                    <TextBox Text="{Binding Path=NewLayerDropout}" materialDesign:HintAssist.Hint="Dropout Value" Margin="10"/>
                    <Button Content="Save changes" Style="{StaticResource BasicButtonStyle}"  Command="{Binding SaveChangesHiddenLayer}" Margin="10"/>
                    <Button
                        Width="Auto"
                        Height="Auto"
                        Style="{StaticResource BasicButtonStyle}"                       
                        BorderThickness="0"
                        Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                        Content="Close"
                        Margin="10"
                         />
                    <!--Command="{Binding ClosePopupCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                         AncestorType={x:Type materialDesign:DialogHost}}}"-->
                </StackPanel>
            </materialDesign:DialogHost.DialogContent>
        </materialDesign:DialogHost>
        
        <!--ADD NEW LAYER INCLUDING DROPOUT-->
        <materialDesign:DialogHost
            x:Name="AddNewLayerDialogHost"
            Grid.RowSpan="2"
            Grid.ColumnSpan="2"
            Padding="10"
            IsOpen="False">
            <materialDesign:DialogHost.DialogContent>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.1*"/>
                        <RowDefinition Height="0.7*"/>
                        <RowDefinition Height="0.2*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" Grid.Row="0" x:Name="radioBTNPanel">
                        <RadioButton x:Name="RadioBTNDense" Content="Dense" IsChecked="True"/>
                        <RadioButton x:Name="RadioBTNDropout" Content="Dropout"/>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Margin="20" Visibility="{Binding IsChecked,ElementName=RadioBTNDense,Converter={StaticResource booleanToVisibiliy}}" Grid.Row="1">
                        <TextBox Text="{Binding NewLayerNumberOfNodes}" materialDesign:HintAssist.Hint="Number of nodes" Margin="5"/>
                        <ComboBox SelectedItem="{Binding NewLayerSelectedActivationFunction}" Margin="5" >
                            <ComboBoxItem Content="ReLu"/>
                            <ComboBoxItem Content="Sigmoid"/>
                            <ComboBoxItem Content="Softmax"/>
                        </ComboBox>
                        <TextBox Text="{Binding NewLayerDimension}" materialDesign:HintAssist.Hint="Number of elements input layer" Margin="5"/>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Margin="20" Visibility="{Binding IsChecked,ElementName=RadioBTNDropout,Converter={StaticResource booleanToVisibiliy}}" Grid.Row="1">
                        <TextBox Text="{Binding NewLayerDropout}" materialDesign:HintAssist.Hint="Dropout Value" Margin="5"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="20" Grid.Row="2">
                        <Button Content="Add Layer" Style="{StaticResource BasicButtonStyle}" x:Name="btnAddLayer" Click="btnAddLayer_Click" Margin="5"/>
                        <Button                       
                            Width="Auto"
                            Height="Auto"
                            Style="{StaticResource BasicButtonStyle}"                       
                            BorderThickness="0"
                            Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                            Content="Close"
                            Margin="5"
                             />
                    </StackPanel>
                </Grid>
            </materialDesign:DialogHost.DialogContent>
        </materialDesign:DialogHost>

        <!--<Button Background="Transparent" Foreground="#FF2196F3"  Grid.Row="1" Grid.Column="1"  Height="Auto" Width="Auto" HorizontalAlignment="Right" Opacity="0.3" Style="{StaticResource IncreaseOpacityOnHover}">
            <materialDesign:PackIcon Kind="SkipNextCircleOutline" Background="Transparent"/>
        </Button>-->
    </Grid>
</UserControl>
