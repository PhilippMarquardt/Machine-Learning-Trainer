<UserControl x:Class="MachineLearningTrainer.DeepNeuralNetwork"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MachineLearningTrainer"
             mc:Ignorable="d" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             Background="{DynamicResource MaterialDesignPaper}"
             d:DesignHeight="800" d:DesignWidth="800">


            <UserControl.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                      Storyboard.TargetProperty="Opacity"
                      From="0.0" To="1.0" Duration="0:0:1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </UserControl.Triggers>
        <UserControl.Resources> 

        <Style x:Key="BasicButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Content" Value="Hello World"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#FF2196F3" />
            <Setter Property="Margin" Value="10"/>
        </Style>

        <Style x:Key="IncreaseOpacityOnHover" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                              Storyboard.TargetProperty="Opacity"
                              From="0.3" To="1.0" Duration="0:0:0.5"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                From="1.0" To="0.3" Duration="0:0:1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        
      
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.3*"/>
            <ColumnDefinition Width="0.7*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.9*"/>
            <RowDefinition Height="0.1*"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Column="0" Grid.Row="0" Margin="10">
            <materialDesign:Card Padding="10" Margin="10">
                <StackPanel>
                    <TextBlock Text="Welcome to the DNN designer" Width="Auto" Height="Auto" TextWrapping="Wrap" Foreground="Black" HorizontalAlignment="Center" Margin="10"/>
                    <TextBlock Text="The first two layers are the input and output layer. Feel free to add hidden layers" Width="Auto" Height="Auto" TextWrapping="Wrap" Foreground="Black" HorizontalAlignment="Center" Margin="10"/>
                    <TextBlock Text="When you've specified your architecture you can specify the hyperparameters and start the training afterwards." Width="Auto" Height="Auto" TextWrapping="Wrap" Foreground="Black" HorizontalAlignment="Center" Margin="10"/>
                </StackPanel>
            </materialDesign:Card>

            <materialDesign:Card Padding="10" Margin="10">
                
            </materialDesign:Card>
        </StackPanel>
       
        <Grid Grid.Column="1" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.9*"/>
                <RowDefinition Height="0.1*"/>
            </Grid.RowDefinitions>
     
                <ListBox
                    x:Name="listboxHiddenLayers"
                    SelectionChanged="listboxHiddenLayers_SelectionChanged"
                    Grid.Row="0"
                    SelectedItem="{Binding SelectedDeepNeuralNetworkLayer}"
                    ItemsSource="{Binding DeepNeuralNetworkHiddenLayers}"           
                    Padding="10" >
                <ListBox.ItemContainerStyle>
                    <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="ListBoxItem">
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListBox.ItemContainerStyle>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.9*"/>
                                <ColumnDefinition Width="0.1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.9*"/>
                                <RowDefinition Height="0.1*"/>
                            </Grid.RowDefinitions>
                        
                            <materialDesign:Card
                                Height="Auto"
                                Margin="10"
                                Grid.Row="0"
                                Grid.Column="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{DynamicResource MaterialDesignBackground}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0.33*"/>
                                        <ColumnDefinition Width="0.33*"/>
                                        <ColumnDefinition Width="0.33*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0.1*"/>
                                        <RowDefinition Height="0.7*"/>
                                        <RowDefinition Height="0.1*"/>
                                        <RowDefinition Height="0.1*"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Column="0" HorizontalAlignment="Center" Text="{Binding Path=NumberOfNodes }" Foreground="Black" FontSize="23"/>
                                    <TextBlock Grid.Column="1" HorizontalAlignment="Center" Text="{Binding Path=Dimension }" Foreground="Black" FontSize="23"/>
                                    <TextBlock Grid.Column="2" HorizontalAlignment="Center" Text="{Binding Path=ActivationFunction }" Foreground="Black" FontSize="23"/>
                                </Grid>
                            </materialDesign:Card>
                            <materialDesign:PackIcon VerticalAlignment="Bottom" HorizontalAlignment="Center" Foreground="Black"  Kind="ArrowDownBold"  Grid.Row="1"/>
                            <Button x:Name="btnDeleteHiddenLayer" Click="btnDeleteHiddenLayer_Click" Style="{StaticResource BasicButtonStyle}" Grid.Column="1"  Grid.Row="0">
                                <materialDesign:PackIcon Kind="Delete"/>
                            </Button>
                            
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
           
            <Button Style="{StaticResource BasicButtonStyle}"  Grid.Row="1" Height="Auto" Width="Auto" Content="Add new layer" Margin="10" Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}" CommandTarget="{Binding ElementName=AddNewLayerDialogHost}"/>
        </Grid>
        <Button Background="Transparent" Command="{Binding PreviousPage}" Foreground="#FF2196F3" Height="Auto" HorizontalAlignment="Left" Grid.Row="3" Style="{StaticResource IncreaseOpacityOnHover}" Opacity="0.3">
            <materialDesign:PackIcon Kind="SkipPreviousCircleOutline" />
        </Button>



        <materialDesign:DialogHost
            x:Name="EditHiddenLayer"
            Grid.RowSpan="2"
            Grid.ColumnSpan="2"
            Padding="10"
            IsOpen="False">
            <materialDesign:DialogHost.DialogContent>
                <StackPanel Orientation="Vertical" Margin="20">
                    <TextBox Text="{Binding Path=NewLayerNumberOfNodes}" materialDesign:HintAssist.Hint="Number of nodes" Margin="5"/>
                    <ComboBox SelectedItem="{Binding NewLayerSelectedActivationFunction}" Margin="5" >
                        <ComboBoxItem Content="ReLu"/>
                        <ComboBoxItem Content="Sigmoid"/>
                        <ComboBoxItem Content="Softmax"/>
                    </ComboBox>
                    <TextBox Text="{Binding Path=NewLayerDimension}" materialDesign:HintAssist.Hint="Dimension in format rows,colums,channel" Margin="5"/>
                    <Button x:Name="btnSaveChanges" Content="Save changes" Style="{StaticResource BasicButtonStyle}"  Command="{Binding SaveChangesHiddenLayer}" Margin="5"/>
                    <Button
                        Width="Auto"
                        Height="Auto"
                        Style="{StaticResource BasicButtonStyle}"                       
                        BorderThickness="0"
                        Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                        Content="Close"
                        Margin="5"
                         />
                </StackPanel>
            </materialDesign:DialogHost.DialogContent>
        </materialDesign:DialogHost>

        <materialDesign:DialogHost
            x:Name="AddNewLayerDialogHost"
            Grid.RowSpan="2"
            Grid.ColumnSpan="2"
            Padding="10"
            IsOpen="False">
            <materialDesign:DialogHost.DialogContent>
                <StackPanel Orientation="Vertical" Margin="20">
                    <TextBox Text="{Binding NewLayerNumberOfNodes}" materialDesign:HintAssist.Hint="Number of nodes" Margin="5"/>
                    <ComboBox SelectedItem="{Binding NewLayerSelectedActivationFunction}" Margin="5" >
                        <ComboBoxItem Content="ReLu"/>
                        <ComboBoxItem Content="Sigmoid"/>
                        <ComboBoxItem Content="Softmax"/>
                    </ComboBox>
                    <TextBox Text="{Binding NewLayerDimension}" materialDesign:HintAssist.Hint="Number of elements input layer" Margin="5"/>
                    <Button Content="Add Layer" Style="{StaticResource BasicButtonStyle}" Command="{Binding AddDNNLayer}" Margin="5"/>
                    <Button                       
                        Width="Auto"
                        Height="Auto"
                        Style="{StaticResource BasicButtonStyle}"                       
                        BorderThickness="0"
                        Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                        Content="Close"
                        Margin="5"
                         />
                </StackPanel>
            </materialDesign:DialogHost.DialogContent>
        </materialDesign:DialogHost>

        <!--<Button Background="Transparent" Foreground="#FF2196F3"  Grid.Row="1" Grid.Column="1"  Height="Auto" Width="Auto" HorizontalAlignment="Right" Opacity="0.3" Style="{StaticResource IncreaseOpacityOnHover}">
            <materialDesign:PackIcon Kind="SkipNextCircleOutline" Background="Transparent"/>
        </Button>-->
    </Grid>
</UserControl>
