<Window x:Class="MachineLearningTrainer.DrawerTool.ColorPicker"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:MachineLearningTrainer.DrawerTool"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="ColorPicker" Height="600" Width="340" ResizeMode="NoResize"
        Closing="Window_Closing">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="booleanToVisibiliy" />

        <Style
            x:Key="ColorCanvas"
            BasedOn="{StaticResource {x:Type xctk:ColorCanvas}}"
            TargetType="xctk:ColorCanvas">
            <Style.Triggers>
                <DataTrigger Binding="{Binding SelectedModeItem, UpdateSourceTrigger=PropertyChanged}" Value="Fill">
                    <Setter Property="SelectedColor" Value="{Binding SelectedLabel.Fill}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectedModeItem, UpdateSourceTrigger=PropertyChanged}" Value="Border">
                    <Setter Property="SelectedColor" Value="{Binding SelectedLabel.Stroke}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectedModeItem, UpdateSourceTrigger=PropertyChanged}" Value="Both">
                    <Setter Property="SelectedColor" Value="{Binding SelectedLabel.Fill}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style
            x:Key="RmvButtonStyle"
            BasedOn="{StaticResource {x:Type Button}}"
            TargetType="Button">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                From="0.8"
                                To="1.0"
                                Duration="0:0:0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                From="1.0"
                                To="0.8"
                                Duration="0:0:1" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <DataTrigger Binding="{Binding DeactivatedAddLabel}" Value="false">
                    <Setter Property="Background" Value="LightGray" />
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding DeactivatedAddLabel}" Value="true">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style
        x:Key="AddButtonStyle"
        BasedOn="{StaticResource {x:Type Button}}"
        TargetType="Button">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                From="0.8"
                                To="1.0"
                                Duration="0:0:0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                From="1.0"
                                To="0.8"
                                Duration="0:0:1" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <DataTrigger Binding="{Binding DeactivatedAddLabel}" Value="false">
                    <Setter Property="Background" Value="LightGoldenrodYellow" />
                    <Setter Property="Foreground" Value="Red" />
                </DataTrigger>
                <DataTrigger Binding="{Binding DeactivatedAddLabel}" Value="true">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="#FF2196F3" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style
        x:Key="txtBox"
        BasedOn="{StaticResource {x:Type TextBox}}"
        TargetType="TextBox">
            <Style.Triggers>
                <DataTrigger Binding="{Binding DeactivatedAddLabel}" Value="false">
                    <Setter Property="Background" Value="LightGoldenrodYellow" />
                    <Setter Property="Foreground" Value="Red" />
                    <Setter Property="materialDesign:HintAssist.Hint" Value="Rename" />
                </DataTrigger>
                <DataTrigger Binding="{Binding DeactivatedAddLabel}" Value="true">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="#FF2196F3" />
                    <Setter Property="materialDesign:HintAssist.Hint" Value="New Label name" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--<Style
            x:Key="cbLabelColorFormatStyle"
            BasedOn="{StaticResource {x:Type ComboBox}}"
            TargetType="ComboBox">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ActivatedAddLabel}" Value="true">
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="Background" Value="LightGray" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ActivatedAddLabel}" Value="false">
                    <Setter Property="IsEnabled" Value="True" />
                    <Setter Property="Background" Value="White" />
                </DataTrigger>
            </Style.Triggers>
        </Style>-->
    </Window.Resources>
    
    
    <Window.InputBindings>
        <KeyBinding
            Key="Return"
            Command="{Binding EnterCommand}"
            CommandParameter="Return" />
    </Window.InputBindings>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <ComboBox
            Grid.Column="0"
            Grid.Row="0"
            x:Name="cbLabelColorFormat"
            Width="160"
            Height="auto"
            Margin="20,0,20,10"
            HorizontalAlignment="Center"
            FontSize="14"
            Foreground="Black" 
            IsEnabled="{Binding DeactivatedAddLabel}"
            ItemsSource="{Binding LabelColorFormat}"
            SelectedItem="{Binding SelectedLabel}">
            <!--Style="{Binding cbLabelColorFormatStyle}">-->
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <WrapPanel Width="auto" HorizontalAlignment="Center"
                               Background="Transparent">
                        <TextBlock
                            x:Name="txtLabel"
                            Text="{Binding Label, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            Background="Transparent"
                            Foreground="Black"/>
                    </WrapPanel>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>
        <Button 
            x:Name="addLabelColorFormat"
            Margin="5"
            Grid.Column="1"
            Grid.Row="0"
            Width="Auto"
            Height="Auto"
            HorizontalAlignment="Left"
            Opacity="0.8"
            Click="AddLabelColorFormat_Click"
            Style="{StaticResource AddButtonStyle}">
            <materialDesign:PackIcon Kind="Plus"  HorizontalAlignment="Center" />
        </Button>
        <Button 
            x:Name="rmvLabelColorFormat"
            Margin="5"
            Grid.Column="2"
            Grid.Row="0"
            Width="Auto"
            Height="Auto"
            HorizontalAlignment="Left"
            Foreground="#FF2196F3"
            Opacity="0.8"
            Click="RmvLabelColorFormat_Click"
            Style="{StaticResource RmvButtonStyle}">
            <materialDesign:PackIcon Kind="Minus"  HorizontalAlignment="Center" />
        </Button>

        <TextBox
            Grid.Row="1"
            Grid.ColumnSpan="3"
            Margin="20,0,20,0"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Left"
            IsReadOnly="True"
            MouseDoubleClick="TextBox_MouseDoubleClick"  
            materialDesign:HintAssist.IsFloating="True"
            Foreground="Black"
            Background="White"
            Text="{Binding SelectedLabel.Label, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            Style="{StaticResource txtBox}"
            />
        
        

        <StackPanel
            x:Name="ColorPicker_Panel"
            Width="auto"
            Visibility="Visible"
            Background="Transparent"
            Grid.Row="2"
            Grid.ColumnSpan="3"
            Grid.Column="0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center">
            <Grid
                    HorizontalAlignment="Center"
                    MinWidth="120"
                    >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock
                        Background="#FF2196F3"
                        Margin="10,5,10,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        FontWeight="Bold"
                        Foreground="White"
                        Text="ColorPicker" 
                        TextAlignment="Center"
                        Grid.Row="0"/>
                <Grid
                        Grid.Row="1"
                        Width="auto"
                        MinWidth="120"
                        Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <DockPanel
                        VerticalAlignment="Center" 
                        Margin="5"
                        Grid.Row="0">
                        <Label
                                Foreground="Black"
                                DockPanel.Dock="Left"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">Mode:</Label>
                        <ComboBox
                                DockPanel.Dock="Right"
                                Width="auto"
                                Height="30"
                                Margin="5"
                                Padding="3"
                                HorizontalAlignment="Right"
                                VerticalContentAlignment="Center"
                                FontSize="14"
                                Foreground="Black"
                                ItemsSource="{Binding ModeItems}"
                                SelectedIndex="0"
                                SelectedItem="{Binding SelectedModeItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </DockPanel>
                </Grid>
                <xctk:ColorCanvas
                    Background="Transparent"
                    Foreground="Black"
                    Style="{StaticResource ColorCanvas}"
                    Margin="10"
                    x:Name="_colorCanvas"
                    Grid.Row="2"
                    VerticalAlignment="Top"
                    HorizontalAlignment="Center" 
                    UsingAlphaChannel="False"
                    SelectedColorChanged="_colorCanvas_SelectedColorChanged">
                </xctk:ColorCanvas>
                <DockPanel 
                        VerticalAlignment="Center" 
                        Margin="5"
                        Grid.Row="3">
                    <Label DockPanel.Dock="Left" Foreground="Black">O:</Label>
                    <TextBox 
                            x:Name="_opacityTextBox"
                            DockPanel.Dock="Right"
                            TextAlignment="Right"
                            Foreground="Black"
                            Width="40" 
                            Text="1"
                            IsReadOnly="True" />
                    <Slider 
                            Maximum="1" 
                            Name="_sliderOpacity" 
                            TickFrequency="0.05"
                            IsSnapToTickEnabled="True"
                            ValueChanged="_sliderOpacity_ValueChanged" 
                            Value="{Binding SelectedLabel.Opacity, Mode=TwoWay}"/>
                </DockPanel>
                <xctk:ColorPicker
                        x:Name="_colorPicker"
                        Margin="5"
                        Grid.Row="4"
                        VerticalAlignment="Top"
                        SelectedColorChanged="_colorPicker_SelectedColorChanged" 
                        ShowTabHeaders="False" 
                        ShowRecentColors="True"
                        ShowAvailableColors="True"
                        ShowStandardColors="True"/>

                <Grid
                        Margin="5"
                        Grid.Row="5"
                        VerticalAlignment="Bottom">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="100" />
                    </Grid.ColumnDefinitions>
                    <!--<Button
                        x:Name="_addColorButton"
                        Grid.Column="0"
                        Click="_applyColorChange_Click" 
                        Content="Add">
                        <Style
                            BasedOn="{StaticResource {x:Type Button}}"
                            TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DeactivatedAddLabel}" Value="false">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DeactivatedAddLabel}" Value="true">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button>-->
                    <Button
                            x:Name="_closeColorChange"
                            Grid.Column="2"
                            Content="Close"
                            Click="_closeColorChange_Click" />
                </Grid>
            </Grid>
        </StackPanel>
    </Grid>
</Window>
