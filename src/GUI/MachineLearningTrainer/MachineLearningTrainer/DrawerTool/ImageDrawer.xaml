<UserControl
    x:Class="MachineLearningTrainer.DrawerTool.ImageDrawer"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:MachineLearningTrainer.DrawerTool"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="1080"
    d:DesignWidth="1920"
    Background="{DynamicResource MaterialDesignPaper}"
    Focusable="True"
    FontFamily="{DynamicResource MaterialDesignFont}"
    Loaded="UserControl_Loaded"
    mc:Ignorable="d">

    <UserControl.Triggers>
        <EventTrigger RoutedEvent="Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation
                        Storyboard.TargetProperty="Opacity"
                        From="0.0"
                        To="1.0"
                        Duration="0:0:1" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </UserControl.Triggers>

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="booleanToVisibiliy" />

        <Style
            x:Key="BasicButtonStyle"
            BasedOn="{StaticResource {x:Type Button}}"
            TargetType="Button">
            <Setter Property="Content" Value="Hello World" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#FF2196F3" />
            <Setter Property="Margin" Value="10" />
        </Style>

        <Style
            x:Key="IncreaseOpacityOnHover"
            BasedOn="{StaticResource {x:Type Button}}"
            TargetType="Button">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                From="0.3"
                                To="1.0"
                                Duration="0:0:0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                From="1.0"
                                To="0.3"
                                Duration="0:0:1" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="myLBStyle" TargetType="{x:Type ListBoxItem}">
            <EventSetter Event="PreviewMouseDown" Handler="LblTextBox_MouseDown" />
            <Style.Resources>
                <SolidColorBrush
                    x:Key="{x:Static SystemColors.HighlightBrushKey}"
                    Opacity="0.8"
                    Color="DodgerBlue" />
            </Style.Resources>
        </Style>

        <Style x:Key="MyListBoxStyle" TargetType="{x:Type ListBox}">
            <Style.Resources>
                <SolidColorBrush
                    x:Key="{x:Static SystemColors.HighlightBrushKey}"
                    Opacity="0.8"
                    Color="DodgerBlue" />
            </Style.Resources>
        </Style>

    </UserControl.Resources>

    <UserControl.InputBindings>
        <KeyBinding
            Key="Delete"
            Command="{Binding DeleteCommand}"
            CommandParameter="Delete" />
        <KeyBinding
            Key="R"
            Command="{Binding AddRectangle}"
            CommandParameter="R"
            Modifiers="Alt" />
        <KeyBinding
            Key="Esc"
            Command="{Binding DeleteSelectionRectangle}"
            CommandParameter="Esc" />
        <KeyBinding
            Key="Return"
            Command="{Binding EnterCommand}"
            CommandParameter="Return" />
        <KeyBinding
            Key="O"
            Command="{Binding LoadImageCommand}"
            CommandParameter="O"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="F"
            Command="{Binding PreprocessFolderCommand}"
            CommandParameter="F"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="D"
            Command="{Binding DuplicateCommand}"
            CommandParameter="D"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="U"
            Command="{Binding RenameCommand}"
            CommandParameter="U"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="Z"
            Command="{Binding UndoCommand}"
            CommandParameter="Z"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="Y"
            Command="{Binding RedoCommand}"
            CommandParameter="Y"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="S"
            Command="{Binding ExportPascalVoc}"
            CommandParameter="S"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="Left"
            Command="{Binding LeftButtonCommand_Move}" />
        <KeyBinding
            Key="Right"
            Command="{Binding RightButtonCommand_Move}" />
        <KeyBinding
            Key="Up"
            Command="{Binding UpButtonCommand_Move}" />
        <KeyBinding
            Key="Down"
            Command="{Binding DownButtonCommand_Move}" />
        <KeyBinding
            Key="Left"
            Command="{Binding LeftButtonCommand}"
            Modifiers="Ctrl+Shift" />
        <KeyBinding
            Key="Right"
            Command="{Binding RightButtonCommand}"
            Modifiers="Ctrl+Shift" />
        <KeyBinding
            Key="Up"
            Command="{Binding UpButtonCommand}"
            Modifiers="Ctrl+Shift" />
        <KeyBinding
            Key="Down"
            Command="{Binding DownButtonCommand}"
            Modifiers="Ctrl+Shift" />
        <KeyBinding
            Key="Left"
            Command="{Binding RightButtonCommand1}"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="Right"
            Command="{Binding LeftButtonCommand1}"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="Up"
            Command="{Binding DownButtonCommand1}"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="Down"
            Command="{Binding UpButtonCommand1}"
            Modifiers="Ctrl" />

        <KeyBinding
            Key="{Binding NewFileCommand.Key}"
            Command="{Binding NewFileCommand}"
            Modifiers="{Binding NewFileCommand.Modifiers}" />
    </UserControl.InputBindings>

    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem
                Height="25"
                Margin="5"
                Header="File">
                <MenuItem
                    Width="300"
                    Click="MenuItem_OpenClick"
                    Command="{Binding LoadImageCommand}"
                    Header="Load Image"
                    InputGestureText="Ctrl + O">
                    <MenuItem.Icon>
                        <Image Source="/Icons/loadimg.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Command="{Binding PreprocessFolderCommand}"
                    Header="Preprocess Folder"
                    InputGestureText="Ctrl + F">
                    <MenuItem.Icon>
                        <Image Source="/Icons/preprocess.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem
                    Command="{Binding AddRectangle}"
                    Header="New Rectangle"
                    HeaderStringFormat="dsad"
                    InputGestureText="Alt + R"
                    IsEnabled="{Binding IsEnabled}">
                    <MenuItem.Icon>
                        <Image Source="/Icons/new.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem
                    Command="{Binding ExportPascalVoc}"
                    Header="Export to XML"
                    InputGestureText="Ctrl + S"
                    IsEnabled="{Binding IsEnabled}">
                    <MenuItem.Icon>
                        <Image Source="/Icons/save.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Command="{Binding LoadXMLCommand}"
                    Header="Load XML"
                    IsEnabled="{Binding IsEnabled}">
                    <MenuItem.Icon>
                        <Image Source="/Icons/loadxml.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem
                    Command="{Binding UpdatePreviewsCommand}"
                    Header="Update Previews"
                    IsEnabled="{Binding OnDelete}">
                    <MenuItem.Icon>
                        <Image Source="/Icons/update.png" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem
                Height="25"
                Margin="5"
                Header="Edit">
                <MenuItem
                    Width="250"
                    Command="{Binding UndoCommand}"
                    Header="Undo"
                    InputGestureText="Ctrl + Z"
                    IsEnabled="{Binding UndoEnabled}">
                    <MenuItem.Icon>
                        <Image Source="/Icons/undo.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Width="250"
                    Command="{Binding RedoCommand}"
                    Header="Redo"
                    InputGestureText="Ctrl + Y"
                    IsEnabled="{Binding UndoEnabled}">
                    <MenuItem.Icon>
                        <Image Source="/Icons/redo.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem
                    Width="250"
                    Command="{Binding DuplicateCommand}"
                    Header="Duplicate"
                    InputGestureText="Ctrl + D"
                    IsEnabled="{Binding IsEnabled}">
                    <MenuItem.Icon>
                        <Image Source="/Icons/duplicate.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Command="{Binding DeleteCommand}"
                    Header="Delete"
                    InputGestureText="Del">
                    <MenuItem.Icon>
                        <Image Source="/Icons/delete.png" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem
                Height="25"
                Margin="5"
                Header="View">
                <MenuItem
                    Width="300"
                    Click="MenuItem_ZoomIn"
                    Header="Zoom  in"
                    InputGestureText="Ctrl + +"
                    IsEnabled="{Binding IsEnabled}">
                    <MenuItem.Icon>
                        <Image Source="/Icons/zoom_in.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Click="MenuItem_ZoomOut"
                    Header="Zoom  out"
                    InputGestureText="Ctrl + -"
                    IsEnabled="{Binding IsEnabled}">
                    <MenuItem.Icon>
                        <Image Source="/Icons/zoom_out.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem
                    Click="MenuItem_Reset"
                    Header="Fit to width"
                    InputGestureText="Ctrl + 0"
                    IsEnabled="{Binding IsEnabled}">
                    <MenuItem.Icon>
                        <Image Source="/Icons/fit.png" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>


        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="4" />
                <ColumnDefinition x:Name="gridX" Width="*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" MinWidth="250" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition x:Name="gridY0" Height="auto" />
                <RowDefinition x:Name="gridY1" Height="*" />
                <RowDefinition x:Name="gridY2" Height="auto" />
            </Grid.RowDefinitions>

            <StackPanel
                Grid.Row="0"
                Grid.RowSpan="3"
                Grid.Column="4"
                Margin="5"
                Panel.ZIndex="3">
                <Button
                    Width="22"
                    Height="22"
                    Margin="5,10,5,10"
                    BorderBrush="Transparent"
                    Command="{Binding AddRectangle}"
                    IsEnabled="{Binding IsEnabled}">
                    <Button.Template>
                        <ControlTemplate>
                            <Image Margin="2" Source="{Binding IconPath}" />
                        </ControlTemplate>
                    </Button.Template>
                    <Button.ToolTip>
                        <TextBlock Text="New Rectangle (Alt + R)" />
                    </Button.ToolTip>
                </Button>
                <Button
                    Width="22"
                    Height="22"
                    Margin="5,10,5,10"
                    BorderBrush="Transparent"
                    Command="{Binding UndoCommand}"
                    IsEnabled="{Binding UndoEnabled}">
                    <Button.Template>
                        <ControlTemplate>
                            <Image Margin="2" Source="/Icons/undo.png" />
                        </ControlTemplate>
                    </Button.Template>
                    <Button.ToolTip>
                        <TextBlock Text="Undo (Ctrl + Z)" />
                    </Button.ToolTip>
                </Button>
                <Button
                    Width="22"
                    Height="22"
                    Margin="5,10,5,10"
                    BorderBrush="Transparent"
                    Command="{Binding RedoCommand}"
                    IsEnabled="{Binding UndoEnabled}">
                    <Button.Template>
                        <ControlTemplate>
                            <Image Margin="2" Source="/Icons/redo.png" />
                        </ControlTemplate>
                    </Button.Template>
                    <Button.ToolTip>
                        <TextBlock Text="Redo (Ctrl + Y)" />
                    </Button.ToolTip>
                </Button>
                <Button
                    Width="22"
                    Height="22"
                    Margin="5,10,5,10"
                    BorderBrush="Transparent"
                    Command="{Binding DuplicateCommand}"
                    IsEnabled="{Binding IsEnabled}">
                    <Button.Template>
                        <ControlTemplate>
                            <Image Margin="2" Source="/Icons/duplicate.png" />
                        </ControlTemplate>
                    </Button.Template>
                    <Button.ToolTip>
                        <TextBlock Text="Duplicate Rectangle (Ctrl + D)" />
                    </Button.ToolTip>
                </Button>
                <Button
                    Width="22"
                    Height="22"
                    Margin="5,10,5,10"
                    BorderBrush="Transparent"
                    Command="{Binding DeleteCommand}">
                    <Button.Template>
                        <ControlTemplate>
                            <Image Margin="2" Source="/Icons/delete.png" />
                        </ControlTemplate>
                    </Button.Template>
                    <Button.ToolTip>
                        <TextBlock Text="Delete Rectangle" />
                    </Button.ToolTip>
                </Button>
                <Button
                    Width="22"
                    Height="22"
                    Margin="5,10,5,10"
                    BorderBrush="Transparent"
                    Click="MenuItem_ZoomIn"
                    IsEnabled="{Binding IsEnabled}">
                    <Button.Template>
                        <ControlTemplate>
                            <Image Margin="2" Source="/Icons/zoom_in.png" />
                        </ControlTemplate>
                    </Button.Template>
                    <Button.ToolTip>
                        <TextBlock Text="Zoom in (Ctrl + +)" />
                    </Button.ToolTip>
                </Button>
                <Button
                    Width="22"
                    Height="22"
                    Margin="5,10,5,10"
                    BorderBrush="Transparent"
                    Click="MenuItem_ZoomOut"
                    IsEnabled="{Binding IsEnabled}">
                    <Button.Template>
                        <ControlTemplate>
                            <Image Margin="2" Source="/Icons/zoom_out.png" />
                        </ControlTemplate>
                    </Button.Template>
                    <Button.ToolTip>
                        <TextBlock Text="Zoom out (Ctrl + -)" />
                    </Button.ToolTip>
                </Button>
                <Button
                    Width="22"
                    Height="22"
                    Margin="5,10,5,10"
                    BorderBrush="Transparent"
                    Click="MenuItem_Reset"
                    IsEnabled="{Binding IsEnabled}">
                    <Button.Template>
                        <ControlTemplate>
                            <Image Margin="2" Source="/Icons/fit.png" />
                        </ControlTemplate>
                    </Button.Template>
                    <Button.ToolTip>
                        <TextBlock Text="Fit to width (Ctrl + 0)" />
                    </Button.ToolTip>
                </Button>
            </StackPanel>


            <Canvas
                Grid.Row="0"
                Grid.RowSpan="4"
                Grid.Column="0"
                Width="{Binding ActualWidth, ElementName=WrapPanel_FileExplorer}"
                Panel.ZIndex="1">

                <StackPanel>
                    <WrapPanel
                        x:Name="WrapPanel_FileExplorer"
                        Width="auto"
                        MouseEnter="WrapPanel_FileExplorer_MouseEnter"
                        MouseLeave="WrapPanel_FileExplorer_MouseLeave">
                        <Rectangle
                            x:Name="Rectangle_FileExplorer"
                            Width="3"
                            Height="{Binding ActualWidth, ElementName=FileExplorer_Button}"
                            Margin="1"
                            Fill="Gray" />
                        <Button
                            x:Name="Button_FileExplorer"
                            Height="25"
                            Margin="1"
                            HorizontalAlignment="Center"
                            Background="Transparent"
                            BorderBrush="White"
                            BorderThickness="0"
                            Click="Button_Click_2"
                            Content="File Explorer"
                            Foreground="Black"
                            Style="{StaticResource BasicButtonStyle}"
                            TextOptions.TextRenderingMode="Auto">
                            <Button.LayoutTransform>
                                <RotateTransform Angle="90" />
                            </Button.LayoutTransform>
                        </Button>
                    </WrapPanel>
                    <!--<WrapPanel x:Name="WrapPanel_Folder" Width="auto" MouseEnter="WrapPanel_Folder_MouseEnter" MouseLeave="WrapPanel_Folder_MouseLeave">
                        <Rectangle x:Name="Rectangle_Folder" Margin="1" Width="3" Height="{Binding ActualWidth, ElementName=FileExplorer_Button}" Fill="Gray"/>
                        <Button x:Name="Button_Folder" Style="{StaticResource BasicButtonStyle}" Content="Folder" HorizontalAlignment="Center" Margin="1" Height="25" BorderBrush="White" BorderThickness="0" Foreground="Black" Background="Transparent" Click="Button_Folder_Click">
                            <Button.LayoutTransform>
                                <RotateTransform Angle="90"/>
                            </Button.LayoutTransform>
                        </Button>
                    </WrapPanel>-->
                </StackPanel>

                <!--<Button Canvas.Bottom="0" Margin="1" Background="White" Command="{Binding PreviousPage}" Height="25" Width="25" Style="{StaticResource IncreaseOpacityOnHover}" Opacity="0.3">
                    <materialDesign:PackIcon Kind="SkipPreviousCircleOutline" />
                </Button>-->

            </Canvas>

            <Grid
                x:Name="gridcolumn1"
                Grid.Row="0"
                Grid.RowSpan="4"
                Grid.Column="3"
                Width="auto"
                HorizontalAlignment="Left"
                Panel.ZIndex="3"
                Background="White">

                <!--<StackPanel local:VisibilityAnimation.AnimationType="Fade" x:Name="Folder_Panel" Visibility="Collapsed" Width="180" HorizontalAlignment="Left">
                    <Grid Background="#FF2196F3" Margin="10" Width="auto" MinWidth="120">
                        <TextBlock Text="Files" Foreground="White" Margin="5" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
                    </Grid>
                    <ListBox HorizontalAlignment="Center" Width="150" ScrollViewer.HorizontalScrollBarVisibility="Auto"/>
                </StackPanel>-->

                <StackPanel
                    x:Name="FolderView_Panel"
                    Width="auto"
                    MinWidth="160"
                    Visibility="Collapsed">
                    <Grid
                        Width="auto"
                        MinWidth="120"
                        Margin="10"
                        Background="#FF2196F3">
                        <TextBlock
                            Margin="5"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            FontWeight="Bold"
                            Foreground="White"
                            Text="File Explorer" />
                    </Grid>
                    <TreeView
                        x:Name="FolderView"
                        Width="auto"
                        Height="700"
                        MinWidth="160"
                        Margin="10"
                        Padding="10"
                        HorizontalAlignment="Stretch"
                        BorderBrush="Gray"
                        BorderThickness="0.5"
                        ScrollViewer.VerticalScrollBarVisibility="Auto">
                        <TreeView.Resources>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <EventSetter Event="MouseDoubleClick" Handler="TreeViewItem_MouseDoubleClick" />
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Image
                                                    Width="20"
                                                    Margin="3"
                                                    Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=Tag, Converter={x:Static local:HeaderToImageConverter.Instance}}" />
                                                <TextBlock VerticalAlignment="Center" Text="{Binding}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TreeView.Resources>
                    </TreeView>
                </StackPanel>

            </Grid>
            <Grid
                x:Name="prGrid"
                Grid.Row="1"
                Grid.RowSpan="3"
                Grid.Column="3"
                Width="auto"
                Height="auto"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Panel.ZIndex="1"
                Background="White"
                Visibility="Collapsed">
                <StackPanel>
                    <Label
                        Margin="10,10,10,5"
                        HorizontalAlignment="Center"
                        Background="White"
                        Content="Image is being prepared ..."
                        FontSize="12"
                        Foreground="Black" />
                    <ProgressBar
                        Width="300"
                        Height="20"
                        Margin="10,5,10,10"
                        Background="White"
                        BorderBrush="Gray"
                        BorderThickness="1"
                        Foreground="LawnGreen"
                        IsIndeterminate="True"
                        Maximum="100"
                        Minimum="0" />
                </StackPanel>
            </Grid>
            <!--<GridSplitter Grid.Column="2" Grid.RowSpan="4" Width="4" HorizontalAlignment="Stretch" Panel.ZIndex="2"/>-->

            <StackPanel
                Grid.Row="2"
                Grid.Column="6"
                Panel.ZIndex="2">
                <Button
                    Width="200"
                    Command="{Binding DeleteCommand}"
                    Content="Delete Rectangle"
                    Style="{StaticResource BasicButtonStyle}" />
                <Button
                    Width="200"
                    Command="{Binding DeleteRectanglesCommand}"
                    Content="Clear Rectangles"
                    Style="{StaticResource BasicButtonStyle}" />
            </StackPanel>

            <Label
                Name="txtBox"
                Grid.Row="3"
                Grid.Column="3"
                Width="auto"
                Height="auto"
                Margin="0,0,10,10"
                Padding="3"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Panel.ZIndex="3"
                Background="White"
                BorderBrush="Black"
                BorderThickness="1"
                FontWeight="Bold" />
            <Label
                Name="txtBox1"
                Grid.Row="3"
                Grid.Column="3"
                Width="auto"
                Height="auto"
                Margin="10,0,0,10"
                Padding="3"
                HorizontalAlignment="Left"
                VerticalAlignment="Bottom"
                Panel.ZIndex="3"
                Background="White"
                BorderBrush="Black"
                BorderThickness="1"
                FontWeight="Bold" />


            <Border
                Grid.Row="0"
                Grid.RowSpan="4"
                Grid.Column="3"
                Grid.ColumnSpan="1"
                Panel.ZIndex="0"
                BorderBrush="Gray"
                BorderThickness="1.5">
                <local:ZoomBorder
                    x:Name="zoomBorder"
                    Background="LightGray"
                    ClipToBounds="True">
                    <Canvas
                        x:Name="cnvImage"
                        Width="{Binding ActualWidth, ElementName=imgPreview}"
                        Height="{Binding ActualHeight, ElementName=imgPreview}"
                        ClipToBounds="True"
                        PreviewMouseDown="ImgCamera_MouseDown"
                        MouseEnter="cnvImage_MouseEnter"
                        MouseLeave="cnvImage_MouseLeave"
                        MouseMove="ImgCamera_MouseMove"
                        PreviewMouseUp="ImgCamera_MouseUp">

                        <Image
                            x:Name="imgPreview"
                            Width="auto"
                            Height="auto"
                            ClipToBounds="True"
                            Source="{Binding ImagePath}" />

                        <ItemsControl
                            x:Name="ad"
                            Width="{Binding ActualWidth, ElementName=imgPreview}"
                            Height="{Binding ActualHeight, ElementName=imgPreview}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            ItemsSource="{Binding RectanglesView, UpdateSourceTrigger=PropertyChanged}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Rectangle
                                        Width="{Binding Width}"
                                        Height="{Binding Height}"
                                        Stroke="{Binding Stroke}"
                                        StrokeThickness="{Binding StrokeThickness}">
                                        <Rectangle.Fill>
                                            <SolidColorBrush Color="{Binding Fill}" Opacity="{Binding Opacity}" />
                                        </Rectangle.Fill>
                                        <Rectangle.RenderTransform>
                                            <TranslateTransform X="{Binding XLeft}" Y="{Binding YTop}" />
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas 
                                        Name="DrawCanvas"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Width="{Binding ActualWidth, ElementName=imgPreview}"
                                        Height="{Binding ActualHeight, ElementName=imgPreview}"
                                        ClipToBounds="True"
                                        IsItemsHost="True" 
                                        Background="Transparent">
                                    </Canvas>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                        
                        <!-- second layer for manipulating Rectangle-->
                        <!--
                        <ItemsControl
                            x:Name="ad_manipulatableRectangle"
                            Width="{Binding ActualWidth, ElementName=imgPreview}"
                            Height="{Binding ActualHeight, ElementName=imgPreview}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            ItemsSource="{Binding manipulatedRectangle, UpdateSourceTrigger=PropertyChanged}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Rectangle
                                        Width="{Binding Width}"
                                        Height="{Binding Height}"
                                        Stroke="{Binding Stroke}"
                                        StrokeThickness="{Binding StrokeThickness}">
                                        <Rectangle.Fill>
                                            <SolidColorBrush Color="{Binding Fill}" Opacity="{Binding Opacity}" />
                                        </Rectangle.Fill>
                                        <Rectangle.RenderTransform>
                                            <TranslateTransform X="{Binding XLeft}" Y="{Binding YTop}" />
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas 
                                        Name="DrawCanvas"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Width="{Binding ActualWidth, ElementName=imgPreview}"
                                        Height="{Binding ActualHeight, ElementName=imgPreview}"
                                        ClipToBounds="True"
                                        IsItemsHost="True" 
                                        Background="Transparent">
                                    </Canvas>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                        -->
                        <!-- -->
                    </Canvas>
                </local:ZoomBorder>
            </Border>

            <!--<GridSplitter Grid.Column="4" Grid.RowSpan="4" Width="4" HorizontalAlignment="Stretch" />-->

            <StackPanel Grid.Row="0" Grid.Column="6">
                <WrapPanel Margin="10" VerticalAlignment="Center">
                    <ToggleButton
                        Margin="10"
                        Content=""
                        IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    <TextBlock
                        Margin="10"
                        VerticalAlignment="Center"
                        Foreground="Black"
                        Text="Use Default Label" />
                </WrapPanel>

                <WrapPanel Margin="10,0,10,0">
                    <ToggleButton Margin="10" IsChecked="{Binding CropModeChecked, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    <TextBlock
                        Margin="10"
                        Foreground="Black"
                        Text="Crop Mode" />
                </WrapPanel>

                <TextBox
                    x:Name="txtDefaultLabel"
                    Width="200"
                    Height="auto"
                    Margin="10"
                    Padding="2"
                    HorizontalAlignment="Center"
                    materialDesign:HintAssist.Hint="Default Label"
                    materialDesign:HintAssist.IsFloating="True"
                    FontSize="14"
                    Foreground="Black"
                    IsEnabled="{Binding IsChecked}"
                    Text="{Binding DefaultLabel, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    TextAlignment="Left" />
                <Grid Margin="15">
                    <Grid.Resources>
                        <ImageBrush x:Key="AddButtonImageBrush" ImageSource="{Binding ListViewImage}" />
                    </Grid.Resources>
                    <!--<Button
                        Width="26"
                        Height="26"
                        Margin="5"
                        HorizontalAlignment="Left"
                        materialDesign:ShadowAssist.ShadowDepth="Depth0"
                        Background="{StaticResource AddButtonImageBrush}"
                        BorderBrush="Transparent"
                        Command="{Binding ListViewCommand}" />-->
                    <ComboBox
                        Width="auto"
                        Height="30"
                        Margin="5"
                        Padding="3"
                        HorizontalAlignment="Center"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        DropDownClosed="ComboBox_DropDownClosed"
                        FontSize="14"
                        Foreground="Black"
                        ItemsSource="{Binding ComboBoxItems}"
                        MouseUp="ImgCamera_MouseUp"
                        SelectedIndex="0"
                        SelectedItem="{Binding SelectedComboBoxItem}" />
                    <TextBlock
                        Margin="5"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        FontStyle="Italic"
                        Foreground="Gray"
                        Text="{Binding RectangleCount, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                </Grid>
            </StackPanel>

            <!--  ListBox with SelectedLabels and Text  -->
            <ListBox
                x:Name="listBoxLabels1"
                Grid.Row="1"
                Grid.Column="6"
                Margin="5"
                Panel.ZIndex="1"
                Background="White"
                Foreground="Black"
                ItemContainerStyle="{StaticResource myLBStyle}"
                ItemsSource="{Binding RectanglesView}"
                MouseDoubleClick="listBoxLabels_MouseDoubleClick"
                MouseRightButtonUp="ListBox_RightButtonUp"
                SelectedItem="{Binding SelectedCustomShape}"
                SelectionChanged="listBoxLabels_SelectionChanged"
                SelectionMode="Single"
                Style="{StaticResource MyListBoxStyle}"
                Visibility="{Binding FilterVisibilitySelected, Converter={StaticResource booleanToVisibiliy}}">
                <ListBox.InputBindings>
                    <KeyBinding
                        Key="Left"
                        Command="{Binding LeftButtonCommand_Move}" />
                    <KeyBinding
                        Key="Right"
                        Command="{Binding RightButtonCommand_Move}" />
                    <KeyBinding
                        Key="Up"
                        Command="{Binding UpButtonCommand_Move}" />
                    <KeyBinding
                        Key="Down"
                        Command="{Binding DownButtonCommand_Move}" />
                    <KeyBinding
                        Key="Left"
                        Command="{Binding LeftButtonCommand}"
                        Modifiers="Ctrl+Shift" />
                    <KeyBinding
                        Key="Right"
                        Command="{Binding RightButtonCommand}"
                        Modifiers="Ctrl+Shift" />
                    <KeyBinding
                        Key="Up"
                        Command="{Binding UpButtonCommand}"
                        Modifiers="Ctrl+Shift" />
                    <KeyBinding
                        Key="Down"
                        Command="{Binding DownButtonCommand}"
                        Modifiers="Ctrl+Shift" />
                    <KeyBinding
                        Key="Left"
                        Command="{Binding RightButtonCommand1}"
                        Modifiers="Ctrl" />
                    <KeyBinding
                        Key="Right"
                        Command="{Binding LeftButtonCommand1}"
                        Modifiers="Ctrl" />
                    <KeyBinding
                        Key="Up"
                        Command="{Binding DownButtonCommand1}"
                        Modifiers="Ctrl" />
                    <KeyBinding
                        Key="Down"
                        Command="{Binding UpButtonCommand1}"
                        Modifiers="Ctrl" />
                    <KeyBinding
                        Key="Return"
                        Command="{Binding EnterCommand}"
                        CommandParameter="Return" />
                </ListBox.InputBindings>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <WrapPanel Width="auto" HorizontalAlignment="Center">
                            <TextBox
                                Height="auto"
                                x:Name="lblTextBox"
                                Width="auto"
                                MinWidth="70"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                AcceptsReturn="False"
                                FontSize="12"
                                Foreground="Black"
                                Text="{Binding Label, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                TextAlignment="Left"
                                IsReadOnly="True"
                                MouseDoubleClick="LblTextBox_MouseDoubleClick"
                                LostFocus="LblTextBox_LostFocus"
                                TextWrapping="Wrap"
                                Margin="20"
                                Padding="5"/>
                        </WrapPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ContextMenu>
                    <ContextMenu IsOpen="{Binding IsOpen}" Placement="MousePoint">
                        <MenuItem
                            Width="300"
                            Command="{Binding DuplicateCommand}"
                            Header="Duplicate"
                            InputGestureText="Ctrl + D">
                            <MenuItem.Icon>
                                <Image Source="/Icons/duplicate.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            Command="{Binding RenameCommand}"
                            Header="Rename All"
                            InputGestureText="Ctrl + U">
                            <MenuItem.Icon>
                                <Image Source="/Icons/rename.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            Command="{Binding DeleteCommand}"
                            Header="Delete"
                            InputGestureText="Del">
                            <MenuItem.Icon>
                                <Image Source="/Icons/delete.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </ListBox.ContextMenu>
            </ListBox>

            <!--  ListBox with SelectedLabels, gallery format  -->
            <ListBox
                Grid.Row="1"
                Grid.Column="6"
                Margin="5"
                Panel.ZIndex="1"
                Background="White"
                Foreground="Black"
                ItemContainerStyle="{StaticResource myLBStyle}"
                ItemsSource="{Binding RectanglesView}"
                MouseDoubleClick="listBoxLabels_MouseDoubleClick"
                MouseRightButtonUp="ListBox_RightButtonUp"
                SelectedItem="{Binding SelectedCustomShape}"
                SelectionChanged="listBoxLabels_SelectionChanged"
                SelectionMode="Extended"
                Style="{StaticResource MyListBoxStyle}"
                Visibility="{Binding FilterVisibilitySelectedGallery, Converter={StaticResource booleanToVisibiliy}}">
                <ListBox.InputBindings>
                    <KeyBinding
                        Key="Left"
                        Command="{Binding LeftButtonCommand_Move}" />
                    <KeyBinding
                        Key="Right"
                        Command="{Binding RightButtonCommand_Move}" />
                    <KeyBinding
                        Key="Up"
                        Command="{Binding UpButtonCommand_Move}" />
                    <KeyBinding
                        Key="Down"
                        Command="{Binding DownButtonCommand_Move}" />
                    <KeyBinding
                        Key="Left"
                        Command="{Binding LeftButtonCommand}"
                        Modifiers="Ctrl+Shift" />
                    <KeyBinding
                        Key="Right"
                        Command="{Binding RightButtonCommand}"
                        Modifiers="Ctrl+Shift" />
                    <KeyBinding
                        Key="Up"
                        Command="{Binding UpButtonCommand}"
                        Modifiers="Ctrl+Shift" />
                    <KeyBinding
                        Key="Down"
                        Command="{Binding DownButtonCommand}"
                        Modifiers="Ctrl+Shift" />
                    <KeyBinding
                        Key="Left"
                        Command="{Binding RightButtonCommand1}"
                        Modifiers="Ctrl" />
                    <KeyBinding
                        Key="Right"
                        Command="{Binding LeftButtonCommand1}"
                        Modifiers="Ctrl" />
                    <KeyBinding
                        Key="Up"
                        Command="{Binding DownButtonCommand1}"
                        Modifiers="Ctrl" />
                    <KeyBinding
                        Key="Down"
                        Command="{Binding UpButtonCommand1}"
                        Modifiers="Ctrl" />
                </ListBox.InputBindings>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <!--<WrapPanel>
                            <Image
                                Width="60"
                                Height="60"
                                Margin="10"
                                Source="{Binding CroppedImage, UpdateSourceTrigger=PropertyChanged}" />
                        </WrapPanel>-->
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid
                            Height="auto"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Columns="3" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ContextMenu>
                    <ContextMenu IsOpen="{Binding IsOpen}" Placement="MousePoint">
                        <MenuItem
                            Width="300"
                            Command="{Binding DuplicateCommand}"
                            Header="Duplicate"
                            InputGestureText="Ctrl + D">
                            <MenuItem.Icon>
                                <Image Source="/Icons/duplicate.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            Command="{Binding RenameCommand}"
                            Header="Rename All"
                            InputGestureText="Ctrl + U">
                            <MenuItem.Icon>
                                <Image Source="/Icons/rename.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            Command="{Binding DeleteCommand}"
                            Header="Delete"
                            InputGestureText="Del">
                            <MenuItem.Icon>
                                <Image Source="/Icons/delete.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </ListBox.ContextMenu>
            </ListBox>

            <!--  ListBox with All Labels and Text  -->
            <ListBox
                x:Name="listBoxLabels"
                Grid.Row="1"
                Grid.Column="6"
                Margin="5"
                Panel.ZIndex="1"
                Foreground="Black"
                ItemContainerStyle="{StaticResource myLBStyle}"
                ItemsSource="{Binding RectanglesView}"
                MouseDoubleClick="listBoxLabels_MouseDoubleClick"
                MouseRightButtonUp="ListBox_RightButtonUp"
                SelectedItem="{Binding SelectedCustomShape}"
                SelectionChanged="listBoxLabels_SelectionChanged"
                SelectionMode="Single"
                Style="{StaticResource MyListBoxStyle}"
                Visibility="{Binding FilterVisibilityAllLabels, Converter={StaticResource booleanToVisibiliy}}">
                <ListBox.InputBindings>
                    <KeyBinding
                        Key="Left"
                        Command="{Binding LeftButtonCommand_Move}" />
                    <KeyBinding
                        Key="Right"
                        Command="{Binding RightButtonCommand_Move}" />
                    <KeyBinding
                        Key="Up"
                        Command="{Binding UpButtonCommand_Move}" />
                    <KeyBinding
                        Key="Down"
                        Command="{Binding DownButtonCommand_Move}" />
                    <KeyBinding
                        Key="Left"
                        Command="{Binding LeftButtonCommand}"
                        Modifiers="Ctrl+Shift" />
                    <KeyBinding
                        Key="Right"
                        Command="{Binding RightButtonCommand}"
                        Modifiers="Ctrl+Shift" />
                    <KeyBinding
                        Key="Up"
                        Command="{Binding UpButtonCommand}"
                        Modifiers="Ctrl+Shift" />
                    <KeyBinding
                        Key="Down"
                        Command="{Binding DownButtonCommand}"
                        Modifiers="Ctrl+Shift" />
                    <KeyBinding
                        Key="Left"
                        Command="{Binding RightButtonCommand1}"
                        Modifiers="Ctrl" />
                    <KeyBinding
                        Key="Right"
                        Command="{Binding LeftButtonCommand1}"
                        Modifiers="Ctrl" />
                    <KeyBinding
                        Key="Up"
                        Command="{Binding DownButtonCommand1}"
                        Modifiers="Ctrl" />
                    <KeyBinding
                        Key="Down"
                        Command="{Binding UpButtonCommand1}"
                        Modifiers="Ctrl" />
                    <KeyBinding
                        Key="Return"
                        Command="{Binding EnterCommand}"
                        CommandParameter="Return" />
                </ListBox.InputBindings>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <WrapPanel Width="auto" HorizontalAlignment="Center">
                            <TextBox
                                Height="auto"
                                x:Name="lblTextBox"
                                Width="auto"
                                MinWidth="70"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                AcceptsReturn="False"
                                FontSize="12"
                                Foreground="Black"
                                Text="{Binding Label, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                TextAlignment="Left"
                                IsReadOnly="True"
                                MouseDoubleClick="LblTextBox_MouseDoubleClick"
                                LostFocus="LblTextBox_LostFocus"
                                TextWrapping="Wrap"
                                Margin="20"
                                Padding="5"/>
                        </WrapPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ContextMenu>
                    <ContextMenu IsOpen="{Binding IsOpen}" Placement="MousePoint">
                        <MenuItem
                            Width="300"
                            Command="{Binding DuplicateCommand}"
                            Header="Duplicate"
                            InputGestureText="Ctrl + D">
                            <MenuItem.Icon>
                                <Image Source="/Icons/duplicate.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            Command="{Binding RenameCommand}"
                            Header="Rename All"
                            InputGestureText="Ctrl + U">
                            <MenuItem.Icon>
                                <Image Source="/Icons/rename.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            Command="{Binding DeleteCommand}"
                            Header="Delete"
                            InputGestureText="Del">
                            <MenuItem.Icon>
                                <Image Source="/Icons/delete.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </ListBox.ContextMenu>
            </ListBox>

            <!--  ListBox with All Labels, gallery format  -->
            <ListBox
                Grid.Row="1"
                Grid.Column="6"
                Margin="5"
                Panel.ZIndex="1"
                Foreground="Black"
                ItemContainerStyle="{StaticResource myLBStyle}"
                ItemsSource="{Binding RectanglesView}"
                MouseDoubleClick="listBoxLabels_MouseDoubleClick"
                MouseRightButtonUp="ListBox_RightButtonUp"
                SelectedItem="{Binding SelectedCustomShape}"
                SelectionChanged="listBoxLabels_SelectionChanged"
                SelectionMode="Extended"
                Style="{StaticResource MyListBoxStyle}"
                Visibility="{Binding FilterVisibilityAllLabelsGallery, Converter={StaticResource booleanToVisibiliy}}">
                <ListBox.InputBindings>
                    <KeyBinding
                        Key="Left"
                        Command="{Binding LeftButtonCommand_Move}" />
                    <KeyBinding
                        Key="Right"
                        Command="{Binding RightButtonCommand_Move}" />
                    <KeyBinding
                        Key="Up"
                        Command="{Binding UpButtonCommand_Move}" />
                    <KeyBinding
                        Key="Down"
                        Command="{Binding DownButtonCommand_Move}" />
                    <KeyBinding
                        Key="Left"
                        Command="{Binding LeftButtonCommand}"
                        Modifiers="Ctrl+Shift" />
                    <KeyBinding
                        Key="Right"
                        Command="{Binding RightButtonCommand}"
                        Modifiers="Ctrl+Shift" />
                    <KeyBinding
                        Key="Up"
                        Command="{Binding UpButtonCommand}"
                        Modifiers="Ctrl+Shift" />
                    <KeyBinding
                        Key="Down"
                        Command="{Binding DownButtonCommand}"
                        Modifiers="Ctrl+Shift" />
                    <KeyBinding
                        Key="Left"
                        Command="{Binding RightButtonCommand1}"
                        Modifiers="Ctrl" />
                    <KeyBinding
                        Key="Right"
                        Command="{Binding LeftButtonCommand1}"
                        Modifiers="Ctrl" />
                    <KeyBinding
                        Key="Up"
                        Command="{Binding DownButtonCommand1}"
                        Modifiers="Ctrl" />
                    <KeyBinding
                        Key="Down"
                        Command="{Binding UpButtonCommand1}"
                        Modifiers="Ctrl" />
                </ListBox.InputBindings>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <!--
                        <WrapPanel>
                            <Image
                                Width="60"
                                Height="60"
                                Margin="10"
                                Source="{Binding CroppedImage, UpdateSourceTrigger=PropertyChanged}" />
                        </WrapPanel>
                        -->
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid
                            Height="auto"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Columns="3" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ContextMenu>
                    <ContextMenu IsOpen="{Binding IsOpen}" Placement="MousePoint">
                        <MenuItem
                            Width="300"
                            Command="{Binding DuplicateCommand}"
                            Header="Duplicate"
                            InputGestureText="Ctrl + D">
                            <MenuItem.Icon>
                                <Image Source="/Icons/duplicate.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            Command="{Binding RenameCommand}"
                            Header="Rename All"
                            InputGestureText="Ctrl + U">
                            <MenuItem.Icon>
                                <Image Source="/Icons/rename.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            Command="{Binding DeleteCommand}"
                            Header="Delete"
                            InputGestureText="Del">
                            <MenuItem.Icon>
                                <Image Source="/Icons/delete.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </ListBox.ContextMenu>
            </ListBox>
        </Grid>
    </DockPanel>
</UserControl>
