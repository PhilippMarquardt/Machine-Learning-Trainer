<UserControl x:Class="MachineLearningTrainer.DrawerTool.ImageDrawer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MachineLearningTrainer.DrawerTool"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{DynamicResource MaterialDesignFont}"
             d:DesignHeight="1080" d:DesignWidth="1920">

    <UserControl.Triggers>
        <EventTrigger RoutedEvent="Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation
                      Storyboard.TargetProperty="Opacity"
                      From="0.0" To="1.0" Duration="0:0:1"/>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </UserControl.Triggers>

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="booleanToVisibiliy" />

        <Style x:Key="BasicButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Content" Value="Hello World"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#FF2196F3" />
            <Setter Property="Margin" Value="10"/>
        </Style>

        <Style x:Key="IncreaseOpacityOnHover" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                              Storyboard.TargetProperty="Opacity"
                              From="0.3" To="1.0" Duration="0:0:0.5"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                From="1.0" To="0.3" Duration="0:0:1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="170"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="100"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="100"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Column="0" Panel.ZIndex="1" Grid.Row="0" Grid.RowSpan="2" Background="White">
            <Button Style="{StaticResource BasicButtonStyle}" Content="Load image"  Command="{Binding LoadImageCommand}"/>
            <Button Style="{StaticResource BasicButtonStyle}" x:Name="btnAddRectangle" 
                        Click="btnAddRectangle_Click" IsEnabled="{Binding IsEnabled}">
                <AccessText>New _Rectangle</AccessText>
                <Button.ToolTip>
                    <TextBlock Text="(Alt + R)"/>
                </Button.ToolTip>
            </Button>
            <Button Style="{StaticResource BasicButtonStyle}" Content="Export To XML" Command="{Binding ExportPascalVoc}"/>
        </StackPanel>
        <StackPanel Grid.Column="2" Grid.Row="2" Panel.ZIndex="1" Background="White">
            <Button Style="{StaticResource BasicButtonStyle}" Command="{Binding DeleteCommand}">
                <AccessText>_Delete Rectangle</AccessText>
                <Button.ToolTip>
                    <TextBlock Text="(Alt + D)"/>
                </Button.ToolTip>
            </Button>
            <Button Style="{StaticResource BasicButtonStyle}" Content="Clear Rectangles" Command="{Binding DeleteRectanglesCommand}"/>
        </StackPanel>
        <StackPanel Grid.Row="2" Background="White" Panel.ZIndex="1"/>

        <local:ZoomBorder x:Name="zoomBorder" Grid.Column="1" Panel.ZIndex="0" Grid.Row="0" Grid.RowSpan="3" Background="LightGray" 
                          BorderBrush="Gray" BorderThickness="1">

            <Canvas x:Name="cnvImage" MouseDown="imgCamera_MouseDown" MouseUp="imgCamera_MouseUp" MouseMove="imgCamera_MouseMove" 
                    Width="{Binding ActualWidth, ElementName=imgPreview}" Height="{Binding ActualHeight, ElementName=imgPreview}">
                <Image x:Name="imgPreview" Source="{Binding ImagePath}" Width="auto" Height="auto"/>
                <ItemsControl ItemsSource="{Binding AllRectangles}" Background="Transparent" x:Name="ad" VerticalAlignment="Center" HorizontalAlignment="Center"
                              Width="{Binding ActualWidth, ElementName=imgPreview}" Height="{Binding ActualHeight, ElementName=imgPreview}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="local:ResizableRectangle">
                            <Setter Property="Canvas.Left" Value="{Binding X}"/>
                            <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                            <Setter Property="Viktor" Value="{Binding LastLabel, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>

            </Canvas>
        </local:ZoomBorder>

        <StackPanel Grid.Column="2" Grid.Row="0" Background="White" Panel.ZIndex="1">
            <CheckBox Content="Use default label" Foreground="Black" FontSize="14" IsChecked="False" Margin="10,15,10,10"/>
            <TextBox Foreground="Black" Text="{Binding DefaultLabel}" Height="auto" TextAlignment="Left" Padding="2" Margin="10" 
                     BorderBrush="Gray" BorderThickness="1" FontSize="14"/>
        </StackPanel>
        
        <ListBox ItemsSource="{Binding AllRectangles}" SelectedItem="{Binding SelectedResizableRectangle}" Foreground="Black" Grid.Column="2" Background="White"
                 x:Name="listBoxLabels" Panel.ZIndex="1" Grid.Row="1" Grid.RowSpan="1">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <WrapPanel>
                        <Image Source="{Binding CroppedImage}" Height="50" Width="50" Margin="0,0,10,0"/>
                        <TextBox x:Name="lblTextBox" Text="{Binding Viktor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="Black" FontSize="16" VerticalAlignment="Center" 
                                   TextAlignment="Left" HorizontalAlignment="Left"/>
                    </WrapPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Button Background="Transparent" Command="{Binding PreviousPage}" Foreground="#FF2196F3" Height="Auto" 
                HorizontalAlignment="Left" Grid.Row="1" Grid.Column="0" Style="{StaticResource IncreaseOpacityOnHover}" Opacity="0.3">
            <materialDesign:PackIcon Kind="SkipPreviousCircleOutline" />
        </Button>
    </Grid>
</UserControl>
